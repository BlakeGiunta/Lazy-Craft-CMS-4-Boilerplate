{# Set Defaults for Flowbite #}
{% set defaults = {
  data: {
    type: "default",  # Example type
    size: "base",     # Example size
    link: null
  },
  variants: {
    type: {
      alpha: "text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5",
      beta: "text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-gray-900 bg-white ...",
      outlined: "text-blue-700 hover:text-white border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-500 dark:focus:ring-blue-800"
    },
    size: {
      xs: "px-3 py-2 text-xs font-medium",
      sm: "px-3 py-2 text-sm font-medium",
      base: "px-5 py-2.5 text-sm font-medium",
      lg: "px-5 py-3 text-base font-medium",
      xl: "px-6 py-3.5 text-base font-medium"
      # Add more sizes as needed
    }
  }
} %}

{# >>> Merge data / classes / variants (optional) #}
{% set props = {
  data: data is defined and data is iterable ? defaults.data|merge(data) : defaults.data,
  variants: defaults.variants
} %}

{% if props.data.link %}
  {% if props.data.link is not string and props.data.link.getUrl() %}
    {{
      props.data.link.getLink({
        class: props.variants.type[props.data.type] ~ " " ~ props.variants.size[props.data.size]
      })
    }}
  {% endif %}
  {% if props.data.link is string %}
    <a href="{{ props.data.link }}" class="{{ props.variants.type[props.data.type] ~ " " ~ props.variants.size[props.data.size] }}">Read more</a>
  {% endif %}
{% endif %}
